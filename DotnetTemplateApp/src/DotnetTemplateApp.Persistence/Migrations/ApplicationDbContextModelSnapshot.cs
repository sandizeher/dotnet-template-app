// <auto-generated />
using System;
using DotnetTemplateApp.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DotnetTemplateApp.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DotnetTemplateApp.Domain.Models.Account.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Firstname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lastname");

                    b.Property<string>("Middlename")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("middlename");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_account_id");

                    b.Property<string>("UserDisplayName")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("UserAccountId")
                        .IsUnique();

                    b.ToTable("users", "account");
                });

            modelBuilder.Entity("DotnetTemplateApp.Domain.Models.Account.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_status");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("boolean")
                        .HasColumnName("is_registered");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("phone_number");

                    b.Property<string>("PhoneNumberPrefix")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("phone_number_prefix");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_user_accounts");

                    b.HasIndex(new[] { "Email" }, "uniq_user_accounts_email")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "uniq_user_accounts_id")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "uniq_user_accounts_username")
                        .IsUnique();

                    b.ToTable("user_accounts", "account");
                });

            modelBuilder.Entity("DotnetTemplateApp.Domain.Models.Account.User", b =>
                {
                    b.HasOne("DotnetTemplateApp.Domain.Models.Account.UserAccount", "UserAccount")
                        .WithOne("User")
                        .HasForeignKey("DotnetTemplateApp.Domain.Models.Account.User", "UserAccountId")
                        .IsRequired()
                        .HasConstraintName("fk_user_user_account_id");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("DotnetTemplateApp.Domain.Models.Account.UserAccount", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
